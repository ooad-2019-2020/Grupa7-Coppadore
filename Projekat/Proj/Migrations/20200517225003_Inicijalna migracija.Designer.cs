// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projekat.Models;

namespace Projekat.Migrations
{
    [DbContext(typeof(CDContext))]
    [Migration("20200517225003_Inicijalna migracija")]
    partial class Inicijalnamigracija
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Projekat.Models.Film", b =>
                {
                    b.Property<int>("FilmID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FilmZanrID")
                        .HasColumnType("int");

                    b.Property<int?>("GlumacFilmID")
                        .HasColumnType("int");

                    b.Property<int?>("KomentarID")
                        .HasColumnType("int");

                    b.Property<int?>("ListaPregledanihID")
                        .HasColumnType("int");

                    b.Property<int?>("ListaZeljaID")
                        .HasColumnType("int");

                    b.Property<int>("brojOcjena")
                        .HasColumnType("int");

                    b.Property<double>("cijena")
                        .HasColumnType("float");

                    b.Property<int>("godinaFilma")
                        .HasColumnType("int");

                    b.Property<string>("link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ocjena")
                        .HasColumnType("float");

                    b.Property<string>("opisFilma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("poster")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("reziser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("trajanje")
                        .HasColumnType("int");

                    b.HasKey("FilmID");

                    b.HasIndex("FilmZanrID");

                    b.HasIndex("GlumacFilmID");

                    b.HasIndex("KomentarID");

                    b.HasIndex("ListaPregledanihID");

                    b.HasIndex("ListaZeljaID");

                    b.ToTable("Film");
                });

            modelBuilder.Entity("Projekat.Models.FilmZanr", b =>
                {
                    b.Property<int>("FilmZanrID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("FilmZanrID");

                    b.ToTable("FilmZanr");
                });

            modelBuilder.Entity("Projekat.Models.Glumac", b =>
                {
                    b.Property<int>("GlumacID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GlumacFilmID")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GlumacID");

                    b.HasIndex("GlumacFilmID");

                    b.ToTable("Glumac");
                });

            modelBuilder.Entity("Projekat.Models.GlumacFilm", b =>
                {
                    b.Property<int>("GlumacFilmID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("GlumacFilmID");

                    b.ToTable("GlumacFilm");
                });

            modelBuilder.Entity("Projekat.Models.Komentar", b =>
                {
                    b.Property<int>("KomentarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("datum")
                        .HasColumnType("datetime2");

                    b.Property<string>("komentar")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KomentarID");

                    b.ToTable("Komentar");
                });

            modelBuilder.Entity("Projekat.Models.Korisnik", b =>
                {
                    b.Property<int>("KorisnikID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KomentarID")
                        .HasColumnType("int");

                    b.Property<int?>("ListaPregledanihID")
                        .HasColumnType("int");

                    b.Property<int?>("ListaZeljaID")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KorisnikID");

                    b.HasIndex("KomentarID");

                    b.HasIndex("ListaPregledanihID");

                    b.HasIndex("ListaZeljaID");

                    b.ToTable("Korisnik");
                });

            modelBuilder.Entity("Projekat.Models.ListaPregledanih", b =>
                {
                    b.Property<int>("ListaPregledanihID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("ListaPregledanihID");

                    b.ToTable("ListaPregledanih");
                });

            modelBuilder.Entity("Projekat.Models.ListaZelja", b =>
                {
                    b.Property<int>("ListaZeljaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("ListaZeljaID");

                    b.ToTable("ListaZelja");
                });

            modelBuilder.Entity("Projekat.Models.Placanje", b =>
                {
                    b.Property<int>("PlacanjeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<string>("brojkartice")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlacanjeID");

                    b.HasIndex("KorisnikID");

                    b.ToTable("Placanje");
                });

            modelBuilder.Entity("Projekat.Models.Zanr", b =>
                {
                    b.Property<int>("ZanrID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FilmZanrID")
                        .HasColumnType("int");

                    b.HasKey("ZanrID");

                    b.HasIndex("FilmZanrID");

                    b.ToTable("Zanr");
                });

            modelBuilder.Entity("Projekat.Models.Film", b =>
                {
                    b.HasOne("Projekat.Models.FilmZanr", null)
                        .WithMany("Film")
                        .HasForeignKey("FilmZanrID");

                    b.HasOne("Projekat.Models.GlumacFilm", null)
                        .WithMany("Film")
                        .HasForeignKey("GlumacFilmID");

                    b.HasOne("Projekat.Models.Komentar", null)
                        .WithMany("Film")
                        .HasForeignKey("KomentarID");

                    b.HasOne("Projekat.Models.ListaPregledanih", null)
                        .WithMany("Film")
                        .HasForeignKey("ListaPregledanihID");

                    b.HasOne("Projekat.Models.ListaZelja", null)
                        .WithMany("Film")
                        .HasForeignKey("ListaZeljaID");
                });

            modelBuilder.Entity("Projekat.Models.Glumac", b =>
                {
                    b.HasOne("Projekat.Models.GlumacFilm", null)
                        .WithMany("Glumac")
                        .HasForeignKey("GlumacFilmID");
                });

            modelBuilder.Entity("Projekat.Models.Korisnik", b =>
                {
                    b.HasOne("Projekat.Models.Komentar", null)
                        .WithMany("Korisnik")
                        .HasForeignKey("KomentarID");

                    b.HasOne("Projekat.Models.ListaPregledanih", null)
                        .WithMany("Korisnik")
                        .HasForeignKey("ListaPregledanihID");

                    b.HasOne("Projekat.Models.ListaZelja", null)
                        .WithMany("Korisnik")
                        .HasForeignKey("ListaZeljaID");
                });

            modelBuilder.Entity("Projekat.Models.Placanje", b =>
                {
                    b.HasOne("Projekat.Models.Korisnik", null)
                        .WithMany("Placanje")
                        .HasForeignKey("KorisnikID");
                });

            modelBuilder.Entity("Projekat.Models.Zanr", b =>
                {
                    b.HasOne("Projekat.Models.FilmZanr", null)
                        .WithMany("Zanr")
                        .HasForeignKey("FilmZanrID");
                });
#pragma warning restore 612, 618
        }
    }
}
